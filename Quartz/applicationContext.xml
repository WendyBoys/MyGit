<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 引入外部属性文件=============================== -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--在扫描时排除Controller-->
    <context:component-scan base-package="com.xuan">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:annotation-config/>

    <!-- 阿里数据库连接池 -->
    <bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/sx" />
        <property name="username" value="root" />
        <property name="password" value="199951" />


        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="50" />
        <property name="maxActive" value="50" />


        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />


        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />


        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />


        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />


        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="false" />
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20" />
        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
    </bean>


    <!-- 配置SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 注入连接池 -->
        <property name="dataSource" ref="druidDataSource"/>

        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>


        <!-- 配置Hibernate的相关属性 -->
       <!-- <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

        <property name="mappingLocations" value="classpath:*.hbm.xml"/>
-->

       <!-- &lt;!&ndash; 引入映射文件 &ndash;&gt;
        <property name="mappingResources">
            <list>
                <value>com/xuan/domain/User.hbm.xml</value>
            </list>
        </property>-->
    </bean>



    <!-- 事物管理器配置  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />



    <bean id="timingJob" class="com.xuan.Quartz.Job"></bean>

    <!-- 定时任务配置 -->
    <bean id="jobDetail"
          class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 定时任务 -->
        <property name="targetObject" ref="timingJob"></property>
        <!-- 定时任务实例中具体方法 -->
        <property name="targetMethod" value="execute"></property>
        <!-- 设置定时任务不并发执行  -->
        <property name="concurrent" value="false"></property>

    </bean>

    <!-- 定义trigger触发器 -->
    <bean id="cronTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 定时任务配置 -->
        <property name="jobDetail" ref="jobDetail"></property>
        <!-- 定时任务触发时间 每5秒执行一次 -->
        <property name="cronExpression" value="*/5 * * * * ?"></property>
    </bean>

    <!-- 定时任务总开关 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger"/>
            </list>
        </property>
    </bean>





</beans>